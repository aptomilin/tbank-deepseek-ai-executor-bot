import logging
from decimal import Decimal
from typing import Dict, List, Optional
import aiohttp
import json

logger = logging.getLogger(__name__)


class PortfolioAnalyzer:
    """–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–æ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–æ—Å—Å–∏–π—Å–∫–∏–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏"""

    def __init__(self, config):
        self.config = config
        self.russian_instruments = self._load_russian_instruments()

    def _load_russian_instruments(self) -> Dict:
        """–ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
        return {
            "stocks": {
                "SBER": {"name": "–°–±–µ—Ä–±–∞–Ω–∫", "sector": "–§–∏–Ω–∞–Ω—Å—ã", "risk": "—Å—Ä–µ–¥–Ω–∏–π"},
                "VTBR": {"name": "–í–¢–ë", "sector": "–§–∏–Ω–∞–Ω—Å—ã", "risk": "—Å—Ä–µ–¥–Ω–∏–π"},
                "GAZP": {"name": "–ì–∞–∑–ø—Ä–æ–º", "sector": "–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞", "risk": "–Ω–∏–∑–∫–∏–π"},
                "LKOH": {"name": "–õ—É–∫–æ–π–ª", "sector": "–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞", "risk": "–Ω–∏–∑–∫–∏–π"},
                "ROSN": {"name": "–†–æ—Å–Ω–µ—Ñ—Ç—å", "sector": "–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞", "risk": "—Å—Ä–µ–¥–Ω–∏–π"},
                "NVTK": {"name": "–ù–æ–≤–∞—Ç—ç–∫", "sector": "–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞", "risk": "—Å—Ä–µ–¥–Ω–∏–π"},
                "GMKN": {"name": "–ì–ú–ö –ù–æ—Ä–Ω–∏–∫–µ–ª—å", "sector": "–ú–µ—Ç–∞–ª–ª—É—Ä–≥–∏—è", "risk": "–≤—ã—Å–æ–∫–∏–π"},
                "PLZL": {"name": "–ü–æ–ª—é—Å", "sector": "–ú–µ—Ç–∞–ª–ª—É—Ä–≥–∏—è", "risk": "–≤—ã—Å–æ–∫–∏–π"},
                "YNDX": {"name": "–Ø–Ω–¥–µ–∫—Å", "sector": "IT", "risk": "–≤—ã—Å–æ–∫–∏–π"},
                "TCSG": {"name": "TCS Group", "sector": "–§–∏–Ω–∞–Ω—Å—ã", "risk": "–≤—ã—Å–æ–∫–∏–π"},
                "MOEX": {"name": "–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –±–∏—Ä–∂–∞", "sector": "–§–∏–Ω–∞–Ω—Å—ã", "risk": "—Å—Ä–µ–¥–Ω–∏–π"},
                "MGNT": {"name": "–ú–∞–≥–Ω–∏—Ç", "sector": "–†–∏—Ç–µ–π–ª", "risk": "—Å—Ä–µ–¥–Ω–∏–π"},
                "AFKS": {"name": "–ê–§–ö –°–∏—Å—Ç–µ–º–∞", "sector": "–•–æ–ª–¥–∏–Ω–≥", "risk": "–≤—ã—Å–æ–∫–∏–π"},
                "PHOR": {"name": "–§–æ—Å–ê–≥—Ä–æ", "sector": "–•–∏–º–∏—è", "risk": "—Å—Ä–µ–¥–Ω–∏–π"},
                "POLY": {"name": "–ü–æ–ª–∏–º–µ—Ç–∞–ª–ª", "sector": "–ú–µ—Ç–∞–ª–ª—É—Ä–≥–∏—è", "risk": "–≤—ã—Å–æ–∫–∏–π"},
            },
            "bonds": {
                "SU26230": {"name": "–û–§–ó-26230", "yield": 8.5, "risk": "–Ω–∏–∑–∫–∏–π"},
                "SU26238": {"name": "–û–§–ó-26238", "yield": 8.2, "risk": "–Ω–∏–∑–∫–∏–π"},
                "SU26242": {"name": "–û–§–ó-26242", "yield": 8.0, "risk": "–Ω–∏–∑–∫–∏–π"},
            }
        }

    async def get_portfolio_analysis(self) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –∞–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã"""
        try:
            portfolio_data = await self._get_portfolio_data()
            return self._format_portfolio_analysis(portfolio_data)
        except Exception as e:
            logger.error(f"Error analyzing portfolio: {e}")
            return self._get_fallback_analysis()

    async def get_portfolio_context(self) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ—Ä—Ç—Ñ–µ–ª—è –¥–ª—è AI"""
        try:
            portfolio_data = await self._get_portfolio_data()
            return self._format_portfolio_context(portfolio_data)
        except Exception as e:
            logger.error(f"Error getting portfolio context: {e}")
            return self._get_fallback_context()

    async def get_auto_management_recommendations(self) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø–æ—Ä—Ç—Ñ–µ–ª–µ–º"""
        try:
            portfolio_data = await self._get_portfolio_data()
            return await self._generate_management_recommendations(portfolio_data)
        except Exception as e:
            logger.error(f"Error generating management recommendations: {e}")
            return self._get_fallback_management_recommendations()

    async def _get_portfolio_data(self) -> Dict:
        """–ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è"""
        # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Tinkoff API
        # –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ —Å —Ä–æ—Å—Å–∏–π—Å–∫–∏–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏
        return {
            "total_value": Decimal("150000.00"),
            "total_yield": Decimal("12500.00"),
            "yield_percentage": Decimal("9.1"),
            "available_cash": Decimal("25000.00"),
            "positions": [
                {"name": "–°–±–µ—Ä–±–∞–Ω–∫", "ticker": "SBER", "value": Decimal("45000.00"), 
                 "yield": Decimal("3200.00"), "percentage": Decimal("7.7"), "type": "stock", "country": "RU"},
                {"name": "–í–¢–ë", "ticker": "VTBR", "value": Decimal("35000.00"), 
                 "yield": Decimal("1800.00"), "percentage": Decimal("5.4"), "type": "stock", "country": "RU"},
                {"name": "–ì–∞–∑–ø—Ä–æ–º", "ticker": "GAZP", "value": Decimal("28000.00"), 
                 "yield": Decimal("1500.00"), "percentage": Decimal("5.7"), "type": "stock", "country": "RU"},
                {"name": "–û–§–ó-26242", "ticker": "SU26242", "value": Decimal("40000.00"), 
                 "yield": Decimal("2200.00"), "percentage": Decimal("5.8"), "type": "bond", "country": "RU"},
            ]
        }

    def _format_portfolio_analysis(self, data: Dict) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è"""
        text = "üìä **–ê–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è (–†–æ—Å—Å–∏–π—Å–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã)**\n\n"
        text += f"üíº **–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:** {data['total_value']:,.2f} ‚ÇΩ\n"
        text += f"üìà **–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å:** {data['total_yield']:+,.2f} ‚ÇΩ ({data['yield_percentage']:+.1f}%)\n"
        text += f"üí≥ **–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞:** {data['available_cash']:,.2f} ‚ÇΩ\n\n"

        # –ê–Ω–∞–ª–∏–∑ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
        allocation = self._analyze_allocation(data['positions'])
        text += "**–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ:**\n"
        for asset_type, percentage in allocation.items():
            text += f"‚Ä¢ {asset_type}: {percentage:.1f}%\n"

        text += "\n**–ü–æ–∑–∏—Ü–∏–∏:**\n"
        for position in data['positions']:
            text += f"‚Ä¢ {position['name']} ({position['ticker']}): {position['value']:,.0f} ‚ÇΩ "
            text += f"({position['yield']:+,.0f} ‚ÇΩ, {position['percentage']:+.1f}%)\n"

        text += "\nüá∑üá∫ *–ê–≤—Ç–æ—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: —Ç–æ–ª—å–∫–æ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã*"
        return text

    def _format_portfolio_context(self, data: Dict) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è –¥–ª—è AI"""
        context = "–¢–µ–∫—É—â–∏–π –ø–æ—Ä—Ç—Ñ–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã):\n"
        context += f"- –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {data['total_value']:,.0f} ‚ÇΩ\n"
        context += f"- –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: {data['total_yield']:+,.0f} ‚ÇΩ ({data['yield_percentage']:+.1f}%)\n"
        context += f"- –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞: {data['available_cash']:,.0f} ‚ÇΩ\n\n"

        context += "–ü–æ–∑–∏—Ü–∏–∏:\n"
        for position in data['positions']:
            context += f"‚Ä¢ {position['name']} ({position['ticker']}): {position['value']:,.0f} ‚ÇΩ "
            context += f"({position['percentage']:+.1f}%)\n"

        # –ê–Ω–∞–ª–∏–∑ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
        allocation = self._analyze_allocation(data['positions'])
        context += f"\n–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ:\n"
        for asset_type, percentage in allocation.items():
            context += f"- {asset_type}: {percentage:.1f}%\n"

        context += "\n–í–∞–∂–Ω–æ: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏."
        return context

    async def _generate_management_recommendations(self, data: Dict) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é"""
        recommendations = []
        available_cash = data['available_cash']
        
        # –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è
        allocation = self._analyze_allocation(data['positions'])
        current_stocks = allocation.get('–ê–∫—Ü–∏–∏', 0)
        current_bonds = allocation.get('–û–±–ª–∏–≥–∞—Ü–∏–∏', 0)

        # –°—Ç—Ä–∞—Ç–µ–≥–∏—è –∞–≤—Ç–æ—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        if current_stocks < 70 and available_cash > 10000:
            recommendations.append(f"üìà **–£–≤–µ–ª–∏—á–∏—Ç—å –¥–æ–ª—é –∞–∫—Ü–∏–π –¥–æ 70%** (+{(70 - current_stocks):.1f}%)")
            recommendations.extend(self._get_stock_recommendations(available_cash * 0.7))
        
        if current_bonds < 30 and available_cash > 5000:
            recommendations.append(f"üõ°Ô∏è **–î–æ–±–∞–≤–∏—Ç—å –æ–±–ª–∏–≥–∞—Ü–∏–∏ –¥–æ 30%** (+{(30 - current_bonds):.1f}%)")
            recommendations.extend(self._get_bond_recommendations(available_cash * 0.3))

        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
        if data['yield_percentage'] < 8:
            recommendations.append("‚ö° **–ü–æ–≤—ã—Å–∏—Ç—å –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å** - –¥–æ–±–∞–≤–∏—Ç—å –∞–∫—Ü–∏–∏ —Ä–æ—Å—Ç–∞ (YNDX, TCSG)")

        if len(data['positions']) < 8:
            recommendations.append("üîÑ **–î–∏–≤–µ—Ä—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—å** - –¥–æ–±–∞–≤–∏—Ç—å 2-3 –Ω–æ–≤—ã–µ –ø–æ–∑–∏—Ü–∏–∏")

        text = "ü§ñ **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∞–≤—Ç–æ—É–ø—Ä–∞–≤–ª–µ–Ω–∏—é**\n\n"
        if recommendations:
            for i, rec in enumerate(recommendations, 1):
                text += f"{i}. {rec}\n"
        else:
            text += "‚úÖ –ü–æ—Ä—Ç—Ñ–µ–ª—å –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É.\n"

        text += f"\nüí° **–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π:** {available_cash:,.0f} ‚ÇΩ"
        text += "\n\nüá∑üá∫ *–°—Ç—Ä–∞—Ç–µ–≥–∏—è: –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã*"
        
        return text

    def _analyze_allocation(self, positions: List[Dict]) -> Dict[str, float]:
        """–ê–Ω–∞–ª–∏–∑ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–æ–≤"""
        allocation = {}
        total_value = sum(pos['value'] for pos in positions)
        
        if total_value == 0:
            return {}
            
        for position in positions:
            asset_type = "–ê–∫—Ü–∏–∏" if position['type'] == 'stock' else "–û–±–ª–∏–≥–∞—Ü–∏–∏"
            if asset_type not in allocation:
                allocation[asset_type] = 0
            allocation[asset_type] += float((position['value'] / total_value * 100))
            
        return allocation

    def _get_stock_recommendations(self, amount: Decimal) -> List[str]:
        """–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∞–∫—Ü–∏—è–º"""
        recommendations = []
        stocks = self.russian_instruments["stocks"]
        
        # –í—ã–±–∏—Ä–∞–µ–º –∞–∫—Ü–∏–∏ —Å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–æ–º —Ä–æ—Å—Ç–∞
        growth_stocks = ["YNDX", "TCSG", "POLY", "GMKN"]
        for ticker in growth_stocks[:2]:  # –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º 2 –∞–∫—Ü–∏–∏ —Ä–æ—Å—Ç–∞
            if ticker in stocks:
                stock = stocks[ticker]
                rec_amount = amount * Decimal('0.4')  # 40% –Ω–∞ –∫–∞–∂–¥—É—é –∞–∫—Ü–∏—é —Ä–æ—Å—Ç–∞
                recommendations.append(f"   - {stock['name']} ({ticker}): {rec_amount:,.0f} ‚ÇΩ - –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞")

        # –î–æ–±–∞–≤–ª—è–µ–º –¥–∏–≤–∏–¥–µ–Ω–¥–Ω—ã–µ –∞–∫—Ü–∏–∏
        dividend_stocks = ["SBER", "GAZP", "LKOH"]
        for ticker in dividend_stocks[:1]:  # –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º 1 –¥–∏–≤–∏–¥–µ–Ω–¥–Ω—É—é –∞–∫—Ü–∏—é
            if ticker in stocks:
                stock = stocks[ticker]
                rec_amount = amount * Decimal('0.2')  # 20% –Ω–∞ –¥–∏–≤–∏–¥–µ–Ω–¥–Ω—É—é –∞–∫—Ü–∏—é
                recommendations.append(f"   - {stock['name']} ({ticker}): {rec_amount:,.0f} ‚ÇΩ - –¥–∏–≤–∏–¥–µ–Ω–¥–Ω—ã–π –¥–æ—Ö–æ–¥")
                
        return recommendations

    def _get_bond_recommendations(self, amount: Decimal) -> List[str]:
        """–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–±–ª–∏–≥–∞—Ü–∏—è–º"""
        recommendations = []
        bonds = self.russian_instruments["bonds"]
        
        # –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –û–§–ó —Å –ª—É—á—à–µ–π –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å—é
        best_bond = max(bonds.items(), key=lambda x: x[1]["yield"])
        bond_name = best_bond[1]["name"]
        bond_yield = best_bond[1]["yield"]
        
        recommendations.append(f"   - {bond_name}: {amount:,.0f} ‚ÇΩ - –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å {bond_yield}%")
        
        return recommendations

    def _get_fallback_analysis(self) -> str:
        """–ó–∞–ø–∞—Å–Ω–æ–π –∞–Ω–∞–ª–∏–∑"""
        return """üìä **–ê–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è (–¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ)**

üíº **–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:** 150,000.00 ‚ÇΩ
üìà **–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å:** +12,500.00 ‚ÇΩ (+9.1%)
üí≥ **–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞:** 25,000.00 ‚ÇΩ

**–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ:**
‚Ä¢ –ê–∫—Ü–∏–∏: 72.0%
‚Ä¢ –û–±–ª–∏–≥–∞—Ü–∏–∏: 28.0%

ü§ñ *–î–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ Tinkoff API*
üá∑üá∫ *–°—Ç—Ä–∞—Ç–µ–≥–∏—è: —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏*"""

    def _get_fallback_context(self) -> str:
        """–ó–∞–ø–∞—Å–Ω–æ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç"""
        return """–¢–µ–∫—É—â–∏–π –ø–æ—Ä—Ç—Ñ–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ):
- –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: 150,000 ‚ÇΩ
- –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: +12,500 ‚ÇΩ (+9.1%)
- –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞: 25,000 ‚ÇΩ

–ü–æ–∑–∏—Ü–∏–∏:
‚Ä¢ –°–±–µ—Ä–±–∞–Ω–∫ (SBER): 45,000 ‚ÇΩ (7.7%)
‚Ä¢ –í–¢–ë (VTBR): 35,000 ‚ÇΩ (5.4%)
‚Ä¢ –ì–∞–∑–ø—Ä–æ–º (GAZP): 28,000 ‚ÇΩ (5.7%)
‚Ä¢ –û–§–ó-26242 (SU26242): 40,000 ‚ÇΩ (5.8%)

–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ:
- –ê–∫—Ü–∏–∏: 72.0%
- –û–±–ª–∏–≥–∞—Ü–∏–∏: 28.0%

–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã."""

    def _get_fallback_management_recommendations(self) -> str:
        """–ó–∞–ø–∞—Å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"""
        return """ü§ñ **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∞–≤—Ç–æ—É–ø—Ä–∞–≤–ª–µ–Ω–∏—é**

1. üìà **–£–≤–µ–ª–∏—á–∏—Ç—å –¥–æ–ª—é –∞–∫—Ü–∏–π –¥–æ 70%** (+0.0%)
   - –Ø–Ω–¥–µ–∫—Å (YNDX): 7,000 ‚ÇΩ - –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞
   - TCS Group (TCSG): 7,000 ‚ÇΩ - —Ä–æ—Å—Ç IT-—Å–µ–∫—Ç–æ—Ä–∞

2. üõ°Ô∏è **–î–æ–±–∞–≤–∏—Ç—å –æ–±–ª–∏–≥–∞—Ü–∏–∏ –¥–æ 30%** (+2.0%)
   - –û–§–ó-26230: 6,000 ‚ÇΩ - –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å 8.5%

üí° **–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π:** 25,000 ‚ÇΩ

üá∑üá∫ *–°—Ç—Ä–∞—Ç–µ–≥–∏—è: –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã*"""