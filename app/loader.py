import logging
import os
from typing import Optional

from tinkoff.invest import AsyncClient

# –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ –ø—Ä–æ–µ–∫—Ç–∞
from app.settings import settings

# –°–æ–∑–¥–∞–µ–º –ª–æ–≥–≥–µ—Ä –¥–ª—è —ç—Ç–æ–≥–æ –º–æ–¥—É–ª—è
logger = logging.getLogger(__name__)


def load_config():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    return settings


async def initialize_tinkoff_client(config) -> AsyncClient:
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Tinkoff Invest API"""
    try:
        client = AsyncClient(
            token=config.TINKOFF_TOKEN if config.TINKOFF_TOKEN else "sandbox_token",
            app_name=config.TINKOFF_APP_NAME
        )
        
        if config.TINKOFF_SANDBOX_MODE:
            logger.info("üîß Initializing sandbox mode...")
            
            try:
                # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Å—á–µ—Ç —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
                open_account_response = await client.sandbox.open_sandbox_account()
                account_id = open_account_response.account_id
                logger.info(f"‚úÖ Created new sandbox account: {account_id}")
                
                # –ü–æ–ø–æ–ª–Ω—è–µ–º —Å—á–µ—Ç –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è
                await setup_sandbox_account(client, account_id)
                
            except Exception as e:
                logger.warning(f"‚ö†Ô∏è Cannot create sandbox account: {e}")
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–π account_id –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
                account_id = "sandbox_account_id"
                logger.info(f"‚úÖ Using fallback sandbox account: {account_id}")
        
        return client
        
    except Exception as e:
        logger.error(f"‚ùå Failed to initialize Tinkoff client: {e}")
        raise


async def setup_sandbox_account(client: AsyncClient, account_id: str) -> str:
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Å–æ—á–Ω–æ–≥–æ —Å—á–µ—Ç–∞ (–ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞)"""
    try:
        # –ü–æ–ø–æ–ª–Ω—è–µ–º –ø–µ—Å–æ—á–Ω—ã–π —Å—á–µ—Ç
        from tinkoff.invest import MoneyValue, Currency
        await client.sandbox.sandbox_pay_in(
            account_id=account_id,
            amount=MoneyValue(units=1000000, nano=0, currency=Currency.RUB)
        )
        logger.info("üí∞ Sandbox account funded with 1,000,000 RUB")
        return account_id
        
    except Exception as e:
        logger.warning(f"‚ö†Ô∏è Could not fund sandbox account: {e}")
        return account_id


async def close_tinkoff_client(client: AsyncClient):
    """–ó–∞–∫—Ä—ã—Ç–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ Tinkoff Invest API"""
    await client.close()
    logger.info("‚úÖ Tinkoff client closed")